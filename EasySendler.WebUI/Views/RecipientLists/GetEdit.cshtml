@model EasySendler.Models.BusinessLogic.RecipientListViewModel
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var options = new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "getEditFormContainer",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "OnSuccess"
    };
}
<script type="text/javascript">
    function OnSuccess() { if ("@ViewData.ModelState.IsValid" === "True") { window.location.reload(); }}
</script>
@using (Ajax.BeginForm("GetEdit", "RecipientLists", null, options, new { id = "getEditForm", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="getEditFormContainer">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.rlId)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control text-area" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-actions">
            <div class="col-md-12 text-center">
                <input type="submit" value="Save" class="btn btn-success" />&nbsp;&nbsp;&nbsp;<button class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}